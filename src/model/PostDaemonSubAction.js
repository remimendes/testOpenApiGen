/**
 * opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostDaemonSubAction model module.
 * @module model/PostDaemonSubAction
 * @version 3.12.2
 */
class PostDaemonSubAction {
    /**
     * Constructs a new <code>PostDaemonSubAction</code>.
     * @alias module:model/PostDaemonSubAction
     * @param action {module:model/PostDaemonSubAction.ActionEnum} 
     * @param subs {Array.<String>} daemon component list
     */
    constructor(action, subs) { 
        
        PostDaemonSubAction.initialize(this, action, subs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, subs) { 
        obj['action'] = action;
        obj['subs'] = subs;
    }

    /**
     * Constructs a <code>PostDaemonSubAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostDaemonSubAction} obj Optional instance to populate.
     * @return {module:model/PostDaemonSubAction} The populated <code>PostDaemonSubAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostDaemonSubAction();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('subs')) {
                obj['subs'] = ApiClient.convertToType(data['subs'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostDaemonSubAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostDaemonSubAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostDaemonSubAction.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subs'])) {
            throw new Error("Expected the field `subs` to be an array in the JSON data but got " + data['subs']);
        }

        return true;
    }


}

PostDaemonSubAction.RequiredProperties = ["action", "subs"];

/**
 * @member {module:model/PostDaemonSubAction.ActionEnum} action
 */
PostDaemonSubAction.prototype['action'] = undefined;

/**
 * daemon component list
 * @member {Array.<String>} subs
 */
PostDaemonSubAction.prototype['subs'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
PostDaemonSubAction['ActionEnum'] = {

    /**
     * value: "restart"
     * @const
     */
    "restart": "restart",

    /**
     * value: "start"
     * @const
     */
    "start": "start",

    /**
     * value: "stop"
     * @const
     */
    "stop": "stop"
};



export default PostDaemonSubAction;

