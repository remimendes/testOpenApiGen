/**
 * opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostInstanceProgress model module.
 * @module model/PostInstanceProgress
 * @version 3.12.2
 */
class PostInstanceProgress {
    /**
     * Constructs a new <code>PostInstanceProgress</code>.
     * @alias module:model/PostInstanceProgress
     * @param sessionId {String} 
     * @param state {String} 
     */
    constructor(sessionId, state) { 
        
        PostInstanceProgress.initialize(this, sessionId, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sessionId, state) { 
        obj['session_id'] = sessionId;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>PostInstanceProgress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostInstanceProgress} obj Optional instance to populate.
     * @return {module:model/PostInstanceProgress} The populated <code>PostInstanceProgress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostInstanceProgress();

            if (data.hasOwnProperty('session_id')) {
                obj['session_id'] = ApiClient.convertToType(data['session_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('is_partial')) {
                obj['is_partial'] = ApiClient.convertToType(data['is_partial'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostInstanceProgress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostInstanceProgress</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostInstanceProgress.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['session_id'] && !(typeof data['session_id'] === 'string' || data['session_id'] instanceof String)) {
            throw new Error("Expected the field `session_id` to be a primitive type in the JSON string but got " + data['session_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

PostInstanceProgress.RequiredProperties = ["session_id", "state"];

/**
 * @member {String} session_id
 */
PostInstanceProgress.prototype['session_id'] = undefined;

/**
 * @member {String} state
 */
PostInstanceProgress.prototype['state'] = undefined;

/**
 * @member {Boolean} is_partial
 */
PostInstanceProgress.prototype['is_partial'] = undefined;






export default PostInstanceProgress;

