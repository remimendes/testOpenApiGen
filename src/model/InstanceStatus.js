/**
 * test opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Provisioned from './Provisioned';
import ResourceStatus from './ResourceStatus';
import Status from './Status';

/**
 * The InstanceStatus model module.
 * @module model/InstanceStatus
 * @version 3.12.9
 */
class InstanceStatus {
    /**
     * Constructs a new <code>InstanceStatus</code>.
     * @alias module:model/InstanceStatus
     * @param avail {module:model/Status} 
     * @param constraints {Boolean} 
     * @param csum {String} 
     * @param frozenAt {Date} 
     * @param lastStartedAt {Date} 
     * @param optional {module:model/Status} 
     * @param overall {module:model/Status} 
     * @param isPreserved {Boolean} preserve is true if this status has not been updated due to a heartbeat downtime covered by a maintenance period. when the maintenance period ends, the status should be unchanged, and preserve will be set to false. 
     * @param provisioned {module:model/Provisioned} 
     * @param resources {Object.<String, module:model/ResourceStatus>} 
     * @param running {Array.<String>} 
     * @param scale {Number} 
     * @param updatedAt {Date} 
     */
    constructor(avail, constraints, csum, frozenAt, lastStartedAt, optional, overall, isPreserved, provisioned, resources, running, scale, updatedAt) { 
        
        InstanceStatus.initialize(this, avail, constraints, csum, frozenAt, lastStartedAt, optional, overall, isPreserved, provisioned, resources, running, scale, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, avail, constraints, csum, frozenAt, lastStartedAt, optional, overall, isPreserved, provisioned, resources, running, scale, updatedAt) { 
        obj['avail'] = avail;
        obj['constraints'] = constraints;
        obj['csum'] = csum;
        obj['frozen_at'] = frozenAt;
        obj['last_started_at'] = lastStartedAt;
        obj['optional'] = optional;
        obj['overall'] = overall;
        obj['is_preserved'] = isPreserved || false;
        obj['provisioned'] = provisioned;
        obj['resources'] = resources;
        obj['running'] = running;
        obj['scale'] = scale;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>InstanceStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceStatus} obj Optional instance to populate.
     * @return {module:model/InstanceStatus} The populated <code>InstanceStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstanceStatus();

            if (data.hasOwnProperty('avail')) {
                obj['avail'] = Status.constructFromObject(data['avail']);
            }
            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], 'Boolean');
            }
            if (data.hasOwnProperty('csum')) {
                obj['csum'] = ApiClient.convertToType(data['csum'], 'String');
            }
            if (data.hasOwnProperty('frozen_at')) {
                obj['frozen_at'] = ApiClient.convertToType(data['frozen_at'], 'Date');
            }
            if (data.hasOwnProperty('last_started_at')) {
                obj['last_started_at'] = ApiClient.convertToType(data['last_started_at'], 'Date');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = Status.constructFromObject(data['optional']);
            }
            if (data.hasOwnProperty('overall')) {
                obj['overall'] = Status.constructFromObject(data['overall']);
            }
            if (data.hasOwnProperty('is_preserved')) {
                obj['is_preserved'] = ApiClient.convertToType(data['is_preserved'], 'Boolean');
            }
            if (data.hasOwnProperty('provisioned')) {
                obj['provisioned'] = Provisioned.constructFromObject(data['provisioned']);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], {'String': ResourceStatus});
            }
            if (data.hasOwnProperty('running')) {
                obj['running'] = ApiClient.convertToType(data['running'], ['String']);
            }
            if (data.hasOwnProperty('scale')) {
                obj['scale'] = ApiClient.convertToType(data['scale'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstanceStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstanceStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InstanceStatus.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['csum'] && !(typeof data['csum'] === 'string' || data['csum'] instanceof String)) {
            throw new Error("Expected the field `csum` to be a primitive type in the JSON string but got " + data['csum']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['running'])) {
            throw new Error("Expected the field `running` to be an array in the JSON data but got " + data['running']);
        }

        return true;
    }


}

InstanceStatus.RequiredProperties = ["avail", "constraints", "csum", "frozen_at", "last_started_at", "optional", "overall", "is_preserved", "provisioned", "resources", "running", "scale", "updated_at"];

/**
 * @member {module:model/Status} avail
 */
InstanceStatus.prototype['avail'] = undefined;

/**
 * @member {Boolean} constraints
 */
InstanceStatus.prototype['constraints'] = undefined;

/**
 * @member {String} csum
 */
InstanceStatus.prototype['csum'] = undefined;

/**
 * @member {Date} frozen_at
 */
InstanceStatus.prototype['frozen_at'] = undefined;

/**
 * @member {Date} last_started_at
 */
InstanceStatus.prototype['last_started_at'] = undefined;

/**
 * @member {module:model/Status} optional
 */
InstanceStatus.prototype['optional'] = undefined;

/**
 * @member {module:model/Status} overall
 */
InstanceStatus.prototype['overall'] = undefined;

/**
 * preserve is true if this status has not been updated due to a heartbeat downtime covered by a maintenance period. when the maintenance period ends, the status should be unchanged, and preserve will be set to false. 
 * @member {Boolean} is_preserved
 * @default false
 */
InstanceStatus.prototype['is_preserved'] = false;

/**
 * @member {module:model/Provisioned} provisioned
 */
InstanceStatus.prototype['provisioned'] = undefined;

/**
 * @member {Object.<String, module:model/ResourceStatus>} resources
 */
InstanceStatus.prototype['resources'] = undefined;

/**
 * @member {Array.<String>} running
 */
InstanceStatus.prototype['running'] = undefined;

/**
 * @member {Number} scale
 */
InstanceStatus.prototype['scale'] = undefined;

/**
 * @member {Date} updated_at
 */
InstanceStatus.prototype['updated_at'] = undefined;






export default InstanceStatus;

