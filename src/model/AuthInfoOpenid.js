/**
 * opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthInfoOpenid model module.
 * @module model/AuthInfoOpenid
 * @version 3.12.2
 */
class AuthInfoOpenid {
    /**
     * Constructs a new <code>AuthInfoOpenid</code>.
     * @alias module:model/AuthInfoOpenid
     * @param wellKnownUri {String} 
     * @param clientId {String} 
     */
    constructor(wellKnownUri, clientId) { 
        
        AuthInfoOpenid.initialize(this, wellKnownUri, clientId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, wellKnownUri, clientId) { 
        obj['well_known_uri'] = wellKnownUri;
        obj['client_id'] = clientId;
    }

    /**
     * Constructs a <code>AuthInfoOpenid</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthInfoOpenid} obj Optional instance to populate.
     * @return {module:model/AuthInfoOpenid} The populated <code>AuthInfoOpenid</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthInfoOpenid();

            if (data.hasOwnProperty('well_known_uri')) {
                obj['well_known_uri'] = ApiClient.convertToType(data['well_known_uri'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthInfoOpenid</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthInfoOpenid</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthInfoOpenid.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['well_known_uri'] && !(typeof data['well_known_uri'] === 'string' || data['well_known_uri'] instanceof String)) {
            throw new Error("Expected the field `well_known_uri` to be a primitive type in the JSON string but got " + data['well_known_uri']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }

        return true;
    }


}

AuthInfoOpenid.RequiredProperties = ["well_known_uri", "client_id"];

/**
 * @member {String} well_known_uri
 */
AuthInfoOpenid.prototype['well_known_uri'] = undefined;

/**
 * @member {String} client_id
 */
AuthInfoOpenid.prototype['client_id'] = undefined;






export default AuthInfoOpenid;

