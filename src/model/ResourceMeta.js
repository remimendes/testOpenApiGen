/**
 * test opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceMeta model module.
 * @module model/ResourceMeta
 * @version 3.12.19
 */
class ResourceMeta {
    /**
     * Constructs a new <code>ResourceMeta</code>.
     * @alias module:model/ResourceMeta
     * @param node {String} 
     * @param object {String} 
     * @param rid {String} 
     */
    constructor(node, object, rid) { 
        
        ResourceMeta.initialize(this, node, object, rid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, node, object, rid) { 
        obj['node'] = node;
        obj['object'] = object;
        obj['rid'] = rid;
    }

    /**
     * Constructs a <code>ResourceMeta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceMeta} obj Optional instance to populate.
     * @return {module:model/ResourceMeta} The populated <code>ResourceMeta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceMeta();

            if (data.hasOwnProperty('node')) {
                obj['node'] = ApiClient.convertToType(data['node'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('rid')) {
                obj['rid'] = ApiClient.convertToType(data['rid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceMeta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceMeta</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceMeta.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['node'] && !(typeof data['node'] === 'string' || data['node'] instanceof String)) {
            throw new Error("Expected the field `node` to be a primitive type in the JSON string but got " + data['node']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['rid'] && !(typeof data['rid'] === 'string' || data['rid'] instanceof String)) {
            throw new Error("Expected the field `rid` to be a primitive type in the JSON string but got " + data['rid']);
        }

        return true;
    }


}

ResourceMeta.RequiredProperties = ["node", "object", "rid"];

/**
 * @member {String} node
 */
ResourceMeta.prototype['node'] = undefined;

/**
 * @member {String} object
 */
ResourceMeta.prototype['object'] = undefined;

/**
 * @member {String} rid
 */
ResourceMeta.prototype['rid'] = undefined;






export default ResourceMeta;

