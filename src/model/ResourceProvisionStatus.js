/**
 * test opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Provisioned from './Provisioned';

/**
 * The ResourceProvisionStatus model module.
 * @module model/ResourceProvisionStatus
 * @version 3.12.19
 */
class ResourceProvisionStatus {
    /**
     * Constructs a new <code>ResourceProvisionStatus</code>.
     * @alias module:model/ResourceProvisionStatus
     * @param mtime {Date} 
     * @param state {module:model/Provisioned} 
     */
    constructor(mtime, state) { 
        
        ResourceProvisionStatus.initialize(this, mtime, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mtime, state) { 
        obj['mtime'] = mtime;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>ResourceProvisionStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceProvisionStatus} obj Optional instance to populate.
     * @return {module:model/ResourceProvisionStatus} The populated <code>ResourceProvisionStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceProvisionStatus();

            if (data.hasOwnProperty('mtime')) {
                obj['mtime'] = ApiClient.convertToType(data['mtime'], 'Date');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = Provisioned.constructFromObject(data['state']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceProvisionStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceProvisionStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceProvisionStatus.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ResourceProvisionStatus.RequiredProperties = ["mtime", "state"];

/**
 * @member {Date} mtime
 */
ResourceProvisionStatus.prototype['mtime'] = undefined;

/**
 * @member {module:model/Provisioned} state
 */
ResourceProvisionStatus.prototype['state'] = undefined;






export default ResourceProvisionStatus;

