/**
 * test opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ArbitratorStatus from './model/ArbitratorStatus';
import AuthToken from './model/AuthToken';
import Capability from './model/Capability';
import CapabilityItem from './model/CapabilityItem';
import CapabilityList from './model/CapabilityList';
import Cluster from './model/Cluster';
import DNSRecord from './model/DNSRecord';
import DRBDAllocation from './model/DRBDAllocation';
import DRBDConfig from './model/DRBDConfig';
import Daemon from './model/Daemon';
import DaemonCollector from './model/DaemonCollector';
import DaemonDNS from './model/DaemonDNS';
import DaemonHb from './model/DaemonHb';
import DaemonHbMode from './model/DaemonHbMode';
import DaemonHbStream from './model/DaemonHbStream';
import DaemonHbStreamPeer from './model/DaemonHbStreamPeer';
import DaemonHbStreamType from './model/DaemonHbStreamType';
import DaemonListener from './model/DaemonListener';
import DaemonMonitor from './model/DaemonMonitor';
import DaemonScheduler from './model/DaemonScheduler';
import DaemonStatus from './model/DaemonStatus';
import DaemonSubsystemAlert from './model/DaemonSubsystemAlert';
import DaemonSubsystemStatus from './model/DaemonSubsystemStatus';
import Instance from './model/Instance';
import InstanceActionAccepted from './model/InstanceActionAccepted';
import InstanceConfig from './model/InstanceConfig';
import InstanceItem from './model/InstanceItem';
import InstanceList from './model/InstanceList';
import InstanceMeta from './model/InstanceMeta';
import InstanceMonitor from './model/InstanceMonitor';
import InstanceStatus from './model/InstanceStatus';
import KeywordData from './model/KeywordData';
import KeywordItem from './model/KeywordItem';
import KeywordList from './model/KeywordList';
import KeywordMeta from './model/KeywordMeta';
import Kind from './model/Kind';
import Network from './model/Network';
import NetworkIP from './model/NetworkIP';
import NetworkIPList from './model/NetworkIPList';
import NetworkIPNetwork from './model/NetworkIPNetwork';
import NetworkList from './model/NetworkList';
import Node from './model/Node';
import NodeActionAccepted from './model/NodeActionAccepted';
import NodeConfig from './model/NodeConfig';
import NodeInfo from './model/NodeInfo';
import NodeItem from './model/NodeItem';
import NodeLabel from './model/NodeLabel';
import NodeList from './model/NodeList';
import NodeMeta from './model/NodeMeta';
import NodeMonitor from './model/NodeMonitor';
import NodeStatus from './model/NodeStatus';
import ObjectConfig from './model/ObjectConfig';
import ObjectConfigFile from './model/ObjectConfigFile';
import ObjectData from './model/ObjectData';
import ObjectItem from './model/ObjectItem';
import ObjectList from './model/ObjectList';
import ObjectMeta from './model/ObjectMeta';
import Orchestrate from './model/Orchestrate';
import OrchestrationQueued from './model/OrchestrationQueued';
import PlacementPolicy from './model/PlacementPolicy';
import PlacementState from './model/PlacementState';
import Pool from './model/Pool';
import PoolList from './model/PoolList';
import PoolVolume from './model/PoolVolume';
import PoolVolumeList from './model/PoolVolumeList';
import PostDaemonLogsControl from './model/PostDaemonLogsControl';
import PostDaemonSubAction from './model/PostDaemonSubAction';
import PostInstanceProgress from './model/PostInstanceProgress';
import PostNodeDRBDConfigRequest from './model/PostNodeDRBDConfigRequest';
import PostObjectActionSwitch from './model/PostObjectActionSwitch';
import PostRelayMessage from './model/PostRelayMessage';
import Problem from './model/Problem';
import Provisioned from './model/Provisioned';
import RelayMessage from './model/RelayMessage';
import RelayMessages from './model/RelayMessages';
import Resource from './model/Resource';
import ResourceConfig from './model/ResourceConfig';
import ResourceItem from './model/ResourceItem';
import ResourceList from './model/ResourceList';
import ResourceLogEntry from './model/ResourceLogEntry';
import ResourceMeta from './model/ResourceMeta';
import ResourceMonitor from './model/ResourceMonitor';
import ResourceMonitorRestart from './model/ResourceMonitorRestart';
import ResourceProvisionStatus from './model/ResourceProvisionStatus';
import ResourceStatus from './model/ResourceStatus';
import Role from './model/Role';
import SANPath from './model/SANPath';
import SANPathInitiator from './model/SANPathInitiator';
import SANPathTarget from './model/SANPathTarget';
import Schedule from './model/Schedule';
import ScheduleItem from './model/ScheduleItem';
import ScheduleList from './model/ScheduleList';
import Status from './model/Status';
import SubsetConfig from './model/SubsetConfig';
import Topology from './model/Topology';
import AuthApi from './api/AuthApi';
import ClusterApi from './api/ClusterApi';
import DaemonApi from './api/DaemonApi';
import DnsApi from './api/DnsApi';
import InstanceApi from './api/InstanceApi';
import InstanceCfgApi from './api/InstanceCfgApi';
import InstanceSecApi from './api/InstanceSecApi';
import InstanceSvcApi from './api/InstanceSvcApi';
import InstanceUsrApi from './api/InstanceUsrApi';
import InstanceVolApi from './api/InstanceVolApi';
import InternalApi from './api/InternalApi';
import NetworkApi from './api/NetworkApi';
import NodeApi from './api/NodeApi';
import ObjectApi from './api/ObjectApi';
import ObjectCfgApi from './api/ObjectCfgApi';
import ObjectSecApi from './api/ObjectSecApi';
import ObjectSvcApi from './api/ObjectSvcApi';
import ObjectUsrApi from './api/ObjectUsrApi';
import ObjectVolApi from './api/ObjectVolApi';
import PoolApi from './api/PoolApi';
import PublicApi from './api/PublicApi';
import RelayApi from './api/RelayApi';
import ResourceApi from './api/ResourceApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TestOpensvcAgentApi = require('index'); // See note below*.
* var xxxSvc = new TestOpensvcAgentApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TestOpensvcAgentApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TestOpensvcAgentApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TestOpensvcAgentApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 3.12.9
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ArbitratorStatus model constructor.
     * @property {module:model/ArbitratorStatus}
     */
    ArbitratorStatus,

    /**
     * The AuthToken model constructor.
     * @property {module:model/AuthToken}
     */
    AuthToken,

    /**
     * The Capability model constructor.
     * @property {module:model/Capability}
     */
    Capability,

    /**
     * The CapabilityItem model constructor.
     * @property {module:model/CapabilityItem}
     */
    CapabilityItem,

    /**
     * The CapabilityList model constructor.
     * @property {module:model/CapabilityList}
     */
    CapabilityList,

    /**
     * The Cluster model constructor.
     * @property {module:model/Cluster}
     */
    Cluster,

    /**
     * The DNSRecord model constructor.
     * @property {module:model/DNSRecord}
     */
    DNSRecord,

    /**
     * The DRBDAllocation model constructor.
     * @property {module:model/DRBDAllocation}
     */
    DRBDAllocation,

    /**
     * The DRBDConfig model constructor.
     * @property {module:model/DRBDConfig}
     */
    DRBDConfig,

    /**
     * The Daemon model constructor.
     * @property {module:model/Daemon}
     */
    Daemon,

    /**
     * The DaemonCollector model constructor.
     * @property {module:model/DaemonCollector}
     */
    DaemonCollector,

    /**
     * The DaemonDNS model constructor.
     * @property {module:model/DaemonDNS}
     */
    DaemonDNS,

    /**
     * The DaemonHb model constructor.
     * @property {module:model/DaemonHb}
     */
    DaemonHb,

    /**
     * The DaemonHbMode model constructor.
     * @property {module:model/DaemonHbMode}
     */
    DaemonHbMode,

    /**
     * The DaemonHbStream model constructor.
     * @property {module:model/DaemonHbStream}
     */
    DaemonHbStream,

    /**
     * The DaemonHbStreamPeer model constructor.
     * @property {module:model/DaemonHbStreamPeer}
     */
    DaemonHbStreamPeer,

    /**
     * The DaemonHbStreamType model constructor.
     * @property {module:model/DaemonHbStreamType}
     */
    DaemonHbStreamType,

    /**
     * The DaemonListener model constructor.
     * @property {module:model/DaemonListener}
     */
    DaemonListener,

    /**
     * The DaemonMonitor model constructor.
     * @property {module:model/DaemonMonitor}
     */
    DaemonMonitor,

    /**
     * The DaemonScheduler model constructor.
     * @property {module:model/DaemonScheduler}
     */
    DaemonScheduler,

    /**
     * The DaemonStatus model constructor.
     * @property {module:model/DaemonStatus}
     */
    DaemonStatus,

    /**
     * The DaemonSubsystemAlert model constructor.
     * @property {module:model/DaemonSubsystemAlert}
     */
    DaemonSubsystemAlert,

    /**
     * The DaemonSubsystemStatus model constructor.
     * @property {module:model/DaemonSubsystemStatus}
     */
    DaemonSubsystemStatus,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceActionAccepted model constructor.
     * @property {module:model/InstanceActionAccepted}
     */
    InstanceActionAccepted,

    /**
     * The InstanceConfig model constructor.
     * @property {module:model/InstanceConfig}
     */
    InstanceConfig,

    /**
     * The InstanceItem model constructor.
     * @property {module:model/InstanceItem}
     */
    InstanceItem,

    /**
     * The InstanceList model constructor.
     * @property {module:model/InstanceList}
     */
    InstanceList,

    /**
     * The InstanceMeta model constructor.
     * @property {module:model/InstanceMeta}
     */
    InstanceMeta,

    /**
     * The InstanceMonitor model constructor.
     * @property {module:model/InstanceMonitor}
     */
    InstanceMonitor,

    /**
     * The InstanceStatus model constructor.
     * @property {module:model/InstanceStatus}
     */
    InstanceStatus,

    /**
     * The KeywordData model constructor.
     * @property {module:model/KeywordData}
     */
    KeywordData,

    /**
     * The KeywordItem model constructor.
     * @property {module:model/KeywordItem}
     */
    KeywordItem,

    /**
     * The KeywordList model constructor.
     * @property {module:model/KeywordList}
     */
    KeywordList,

    /**
     * The KeywordMeta model constructor.
     * @property {module:model/KeywordMeta}
     */
    KeywordMeta,

    /**
     * The Kind model constructor.
     * @property {module:model/Kind}
     */
    Kind,

    /**
     * The Network model constructor.
     * @property {module:model/Network}
     */
    Network,

    /**
     * The NetworkIP model constructor.
     * @property {module:model/NetworkIP}
     */
    NetworkIP,

    /**
     * The NetworkIPList model constructor.
     * @property {module:model/NetworkIPList}
     */
    NetworkIPList,

    /**
     * The NetworkIPNetwork model constructor.
     * @property {module:model/NetworkIPNetwork}
     */
    NetworkIPNetwork,

    /**
     * The NetworkList model constructor.
     * @property {module:model/NetworkList}
     */
    NetworkList,

    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node,

    /**
     * The NodeActionAccepted model constructor.
     * @property {module:model/NodeActionAccepted}
     */
    NodeActionAccepted,

    /**
     * The NodeConfig model constructor.
     * @property {module:model/NodeConfig}
     */
    NodeConfig,

    /**
     * The NodeInfo model constructor.
     * @property {module:model/NodeInfo}
     */
    NodeInfo,

    /**
     * The NodeItem model constructor.
     * @property {module:model/NodeItem}
     */
    NodeItem,

    /**
     * The NodeLabel model constructor.
     * @property {module:model/NodeLabel}
     */
    NodeLabel,

    /**
     * The NodeList model constructor.
     * @property {module:model/NodeList}
     */
    NodeList,

    /**
     * The NodeMeta model constructor.
     * @property {module:model/NodeMeta}
     */
    NodeMeta,

    /**
     * The NodeMonitor model constructor.
     * @property {module:model/NodeMonitor}
     */
    NodeMonitor,

    /**
     * The NodeStatus model constructor.
     * @property {module:model/NodeStatus}
     */
    NodeStatus,

    /**
     * The ObjectConfig model constructor.
     * @property {module:model/ObjectConfig}
     */
    ObjectConfig,

    /**
     * The ObjectConfigFile model constructor.
     * @property {module:model/ObjectConfigFile}
     */
    ObjectConfigFile,

    /**
     * The ObjectData model constructor.
     * @property {module:model/ObjectData}
     */
    ObjectData,

    /**
     * The ObjectItem model constructor.
     * @property {module:model/ObjectItem}
     */
    ObjectItem,

    /**
     * The ObjectList model constructor.
     * @property {module:model/ObjectList}
     */
    ObjectList,

    /**
     * The ObjectMeta model constructor.
     * @property {module:model/ObjectMeta}
     */
    ObjectMeta,

    /**
     * The Orchestrate model constructor.
     * @property {module:model/Orchestrate}
     */
    Orchestrate,

    /**
     * The OrchestrationQueued model constructor.
     * @property {module:model/OrchestrationQueued}
     */
    OrchestrationQueued,

    /**
     * The PlacementPolicy model constructor.
     * @property {module:model/PlacementPolicy}
     */
    PlacementPolicy,

    /**
     * The PlacementState model constructor.
     * @property {module:model/PlacementState}
     */
    PlacementState,

    /**
     * The Pool model constructor.
     * @property {module:model/Pool}
     */
    Pool,

    /**
     * The PoolList model constructor.
     * @property {module:model/PoolList}
     */
    PoolList,

    /**
     * The PoolVolume model constructor.
     * @property {module:model/PoolVolume}
     */
    PoolVolume,

    /**
     * The PoolVolumeList model constructor.
     * @property {module:model/PoolVolumeList}
     */
    PoolVolumeList,

    /**
     * The PostDaemonLogsControl model constructor.
     * @property {module:model/PostDaemonLogsControl}
     */
    PostDaemonLogsControl,

    /**
     * The PostDaemonSubAction model constructor.
     * @property {module:model/PostDaemonSubAction}
     */
    PostDaemonSubAction,

    /**
     * The PostInstanceProgress model constructor.
     * @property {module:model/PostInstanceProgress}
     */
    PostInstanceProgress,

    /**
     * The PostNodeDRBDConfigRequest model constructor.
     * @property {module:model/PostNodeDRBDConfigRequest}
     */
    PostNodeDRBDConfigRequest,

    /**
     * The PostObjectActionSwitch model constructor.
     * @property {module:model/PostObjectActionSwitch}
     */
    PostObjectActionSwitch,

    /**
     * The PostRelayMessage model constructor.
     * @property {module:model/PostRelayMessage}
     */
    PostRelayMessage,

    /**
     * The Problem model constructor.
     * @property {module:model/Problem}
     */
    Problem,

    /**
     * The Provisioned model constructor.
     * @property {module:model/Provisioned}
     */
    Provisioned,

    /**
     * The RelayMessage model constructor.
     * @property {module:model/RelayMessage}
     */
    RelayMessage,

    /**
     * The RelayMessages model constructor.
     * @property {module:model/RelayMessages}
     */
    RelayMessages,

    /**
     * The Resource model constructor.
     * @property {module:model/Resource}
     */
    Resource,

    /**
     * The ResourceConfig model constructor.
     * @property {module:model/ResourceConfig}
     */
    ResourceConfig,

    /**
     * The ResourceItem model constructor.
     * @property {module:model/ResourceItem}
     */
    ResourceItem,

    /**
     * The ResourceList model constructor.
     * @property {module:model/ResourceList}
     */
    ResourceList,

    /**
     * The ResourceLogEntry model constructor.
     * @property {module:model/ResourceLogEntry}
     */
    ResourceLogEntry,

    /**
     * The ResourceMeta model constructor.
     * @property {module:model/ResourceMeta}
     */
    ResourceMeta,

    /**
     * The ResourceMonitor model constructor.
     * @property {module:model/ResourceMonitor}
     */
    ResourceMonitor,

    /**
     * The ResourceMonitorRestart model constructor.
     * @property {module:model/ResourceMonitorRestart}
     */
    ResourceMonitorRestart,

    /**
     * The ResourceProvisionStatus model constructor.
     * @property {module:model/ResourceProvisionStatus}
     */
    ResourceProvisionStatus,

    /**
     * The ResourceStatus model constructor.
     * @property {module:model/ResourceStatus}
     */
    ResourceStatus,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The SANPath model constructor.
     * @property {module:model/SANPath}
     */
    SANPath,

    /**
     * The SANPathInitiator model constructor.
     * @property {module:model/SANPathInitiator}
     */
    SANPathInitiator,

    /**
     * The SANPathTarget model constructor.
     * @property {module:model/SANPathTarget}
     */
    SANPathTarget,

    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule,

    /**
     * The ScheduleItem model constructor.
     * @property {module:model/ScheduleItem}
     */
    ScheduleItem,

    /**
     * The ScheduleList model constructor.
     * @property {module:model/ScheduleList}
     */
    ScheduleList,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The SubsetConfig model constructor.
     * @property {module:model/SubsetConfig}
     */
    SubsetConfig,

    /**
     * The Topology model constructor.
     * @property {module:model/Topology}
     */
    Topology,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The ClusterApi service constructor.
    * @property {module:api/ClusterApi}
    */
    ClusterApi,

    /**
    * The DaemonApi service constructor.
    * @property {module:api/DaemonApi}
    */
    DaemonApi,

    /**
    * The DnsApi service constructor.
    * @property {module:api/DnsApi}
    */
    DnsApi,

    /**
    * The InstanceApi service constructor.
    * @property {module:api/InstanceApi}
    */
    InstanceApi,

    /**
    * The InstanceCfgApi service constructor.
    * @property {module:api/InstanceCfgApi}
    */
    InstanceCfgApi,

    /**
    * The InstanceSecApi service constructor.
    * @property {module:api/InstanceSecApi}
    */
    InstanceSecApi,

    /**
    * The InstanceSvcApi service constructor.
    * @property {module:api/InstanceSvcApi}
    */
    InstanceSvcApi,

    /**
    * The InstanceUsrApi service constructor.
    * @property {module:api/InstanceUsrApi}
    */
    InstanceUsrApi,

    /**
    * The InstanceVolApi service constructor.
    * @property {module:api/InstanceVolApi}
    */
    InstanceVolApi,

    /**
    * The InternalApi service constructor.
    * @property {module:api/InternalApi}
    */
    InternalApi,

    /**
    * The NetworkApi service constructor.
    * @property {module:api/NetworkApi}
    */
    NetworkApi,

    /**
    * The NodeApi service constructor.
    * @property {module:api/NodeApi}
    */
    NodeApi,

    /**
    * The ObjectApi service constructor.
    * @property {module:api/ObjectApi}
    */
    ObjectApi,

    /**
    * The ObjectCfgApi service constructor.
    * @property {module:api/ObjectCfgApi}
    */
    ObjectCfgApi,

    /**
    * The ObjectSecApi service constructor.
    * @property {module:api/ObjectSecApi}
    */
    ObjectSecApi,

    /**
    * The ObjectSvcApi service constructor.
    * @property {module:api/ObjectSvcApi}
    */
    ObjectSvcApi,

    /**
    * The ObjectUsrApi service constructor.
    * @property {module:api/ObjectUsrApi}
    */
    ObjectUsrApi,

    /**
    * The ObjectVolApi service constructor.
    * @property {module:api/ObjectVolApi}
    */
    ObjectVolApi,

    /**
    * The PoolApi service constructor.
    * @property {module:api/PoolApi}
    */
    PoolApi,

    /**
    * The PublicApi service constructor.
    * @property {module:api/PublicApi}
    */
    PublicApi,

    /**
    * The RelayApi service constructor.
    * @property {module:api/RelayApi}
    */
    RelayApi,

    /**
    * The ResourceApi service constructor.
    * @property {module:api/ResourceApi}
    */
    ResourceApi
};
