/**
 * opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ObjectList from '../model/ObjectList';
import Problem from '../model/Problem';

/**
* Object service.
* @module api/ObjectApi
* @version 3.12.2
*/
export default class ObjectApi {

    /**
    * Constructs a new ObjectApi. 
    * @alias module:api/ObjectApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getObjectPaths operation.
     * @callback module:api/ObjectApi~getObjectPathsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} path object selector expression.
     * @param {module:api/ObjectApi~getObjectPathsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    getObjectPaths(path, callback) {
      let postBody = null;
      // verify the required parameter 'path' is set
      if (path === undefined || path === null) {
        throw new Error("Missing the required parameter 'path' when calling getObjectPaths");
      }

      let pathParams = {
      };
      let queryParams = {
        'path': path
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/object/path', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getObjects operation.
     * @callback module:api/ObjectApi~getObjectsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ObjectList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all objects in the cluster. 
     * @param {Object} opts Optional parameters
     * @param {String} [path] object selector expression.
     * @param {module:api/ObjectApi~getObjectsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ObjectList}
     */
    getObjects(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'path': opts['path']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ObjectList;
      return this.apiClient.callApi(
        '/object', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
