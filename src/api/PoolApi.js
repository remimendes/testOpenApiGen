/**
 * test opensvc agent api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.12.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PoolList from '../model/PoolList';
import PoolVolumeList from '../model/PoolVolumeList';
import Problem from '../model/Problem';

/**
* Pool service.
* @module api/PoolApi
* @version 3.12.19
*/
export default class PoolApi {

    /**
    * Constructs a new PoolApi. 
    * @alias module:api/PoolApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getPoolVolumes operation.
     * @callback module:api/PoolApi~getPoolVolumesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoolVolumeList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [name] the name of a backend storage pool
     * @param {module:api/PoolApi~getPoolVolumesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoolVolumeList}
     */
    getPoolVolumes(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PoolVolumeList;
      return this.apiClient.callApi(
        '/pool/volume', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPools operation.
     * @callback module:api/PoolApi~getPoolsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PoolList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [name] the name of a backend storage pool
     * @param {module:api/PoolApi~getPoolsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PoolList}
     */
    getPools(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth', 'bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PoolList;
      return this.apiClient.callApi(
        '/pool', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
